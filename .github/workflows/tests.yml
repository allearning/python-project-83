name: tests

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        poetry-version: ["1.3.1"]

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: ujyobr
          POSTGRES_USER: goldiscold
          POSTGRES_DB: p3_dev_db

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - run: make install
       
      - name: test
        run: make test
        env:
          DATABASE_URL: "postgresql://goldiscold:ujyobr@localhost:5432/p3_dev_db"
          SECRET_KEY: "g4g54gefdfdf"
      - name: test coverage
        run: make test-cov
        env:
          DATABASE_URL: "postgresql://goldiscold:ujyobr@localhost:5432/p3_dev_db"
          SECRET_KEY: "g4g54gefdfdf"

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}


  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        poetry-version: ["1.3.1"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - run: make install

      - name: lint
        run: make lint